{"name": "test_flow[\\u8bad\\u7ec3\\u8425-cats-2-cat_add-add\\u9875\\u9762-nomal-/cat_add-post-None-{\\n         \"id\":756,\\n        \"name\": \"tttt\",\\n        \"age\": 60\\n    }-application/json-equal,$.success=True;equal,$.code=200-cat_id=$.data;-None]", "status": "broken", "statusDetails": {"message": "TypeError: 'bool' object is not subscriptable", "trace": "project = '训练营', module = 'cats', caseid = 2, casename = 'cat_add'\ndescription = 'add页面-nomal', path = '/cat_add', method = 'post', headers = None\nparam = '{\\n         \"id\":756,\\n        \"name\": \"tttt\",\\n        \"age\": 60\\n    }'\ncontenttype = 'application/json'\nassertres = 'equal,$.success=True;equal,$.code=200'\nglobalVars = 'cat_id=$.data;', aftersql = None\n\n    @pytest.mark.parametrize(params, params_values)\n    def test_flow(project, module, caseid, casename, description, path, method, headers, param, contenttype, assertres, globalVars, aftersql):\n        url = config_item['url']\n        url = url + path\n        transUrl = params_replace(url)\n        res = send_request(url=transUrl, params=param, headers=headers, method=method, content_type=contenttype)\n        log.info(res)\n        if assertres:\n            assert_res(assertres, res)\n    \n        if globalVars:\n>           global_v.save_globalVars(globalVars, res)\n\n../Case/test_flow.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Utils.GlobalUtil.GlobalVariables object at 0x7fa6e9500d90>\nglobalVars = 'cat_id=$.data;', res = None\n\n    def save_globalVars(self, globalVars, res):\n        for temp in globalVars.split(';'):\n            if temp != '':\n                key = temp.split('=')[0]\n                value11 = temp.split('=')[1]\n>               value = jsonpath.jsonpath(res, value11)[0]\nE               TypeError: 'bool' object is not subscriptable\n\n../Utils/GlobalUtil.py:29: TypeError"}, "parameters": [{"name": "project", "value": "'训练营'"}, {"name": "module", "value": "'cats'"}, {"name": "caseid", "value": "2"}, {"name": "casename", "value": "'cat_add'"}, {"name": "description", "value": "'add页面-nomal'"}, {"name": "path", "value": "'/cat_add'"}, {"name": "method", "value": "'post'"}, {"name": "headers", "value": "None"}, {"name": "param", "value": "'{\n         \"id\":756,\n        \"name\": \"tttt\",\n        \"age\": 60\n    }'"}, {"name": "contenttype", "value": "'application/json'"}, {"name": "assertres", "value": "'equal,$.success=True;equal,$.code=200'"}, {"name": "globalVars", "value": "'cat_id=$.data;'"}, {"name": "aftersql", "value": "None"}], "start": 1715503476476, "stop": 1715503476506, "uuid": "d2b40bc9-888a-429a-a39f-4650528a440c", "historyId": "a6db384a60cb053de36c62ac858cda15", "testCaseId": "36a47803560ff54652978a677dbf9e41", "fullName": "Case.test_flow#test_flow", "labels": [{"name": "parentSuite", "value": "Case"}, {"name": "suite", "value": "test_flow"}, {"name": "host", "value": "wufandeMacBook-Pro.local"}, {"name": "thread", "value": "53962-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Case.test_flow"}]}